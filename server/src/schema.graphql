scalar DateTime

type Query {
  info: String!
  """
  Retrieves all links from the backend, note that this query also allows for filter, sorting and pagination arguments
  从后端检索所有链接，注意：这是一个允许过滤、排序、和分页的Query
  """
  feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
}

enum LinkOrderByInput {
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
}

type Feed {
  links: [Link!]!
  count: Int!
}

type Mutation {
  """
  Allows authenticated users to create a new link
  """
  post(url: String!, description: String!): Link!
  """
  Create an account for a new user
  """
  signup(email: String!, password: String!, name: String!): AuthPayload
  """
  Login an existing user
  """
  login(email: String!, password: String!): AuthPayload
  """
  Allows authenticated users to vote for an existing link
  """
  vote(linkId: ID!): Vote!
}

type Subscription {
  """
  Receive realtime updates when a new link is created
  当新建一个Link时，接收到实时更新
  """
  newLink: Link
  """
  Receive realtime updates when a vote was submitted
  """
  newVote: Vote
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  links: [Link!]!
}

type Link {
  id: ID!
  createdAt: DateTime!
  description: String!
  url: String!
  postedBy: User
  votes: [Vote!]!
}

type Vote {
  id: ID!
  link: Link!
  user: User!
}